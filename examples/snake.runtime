/ Snake
/ by Siwei
/ Jan 2019

/ -- initialize --
let width 24
let height 24

let snake []

let snake_x 10
#init_snake
let snake_seg []
psh snake_seg $snake_x
psh snake_seg 12
psh snake $snake_seg
add snake_x $snake_x 1
jne $snake_x 13 init_snake

let direction 2
let score 0

let x 12
let y 12

/ -- print info --
prt 'SNAKE v1.0'
prt '- Press arrow keys to control.'
prt '- Yellow: food   Gray: wall'
prt '- Snake can teleport through map borders'

/ -- clear canvas
let clear_y -1
#clear_next_line
let clear_x 0
add clear_y $clear_y 1
jeq $clear_y $height wall_horizontal
#clear_line
drw $clear_x $clear_y 0
add clear_x $clear_x 1
jeq $clear_x $width clear_next_line
jmp clear_line

/ -- random wall --
#wall_horizontal
rnd wall_x 0 $width
rnd wall_y 0 $height
#wall_h
jeq $wall_x $width wall_vertical
drw $wall_x $wall_y 22
add wall_x $wall_x 1
jmp wall_h

#wall_vertical
rnd wall_x 0 $width
rnd wall_y 0 $height
#wall_v
jeq $wall_y $height apple
drw $wall_x $wall_y 22
add wall_y $wall_y 1
jmp wall_v

#apple
rnd apple_x 0 $width
rnd apple_y 0 $height
pxl color $apple_x $apple_y
jne $color 0 apple
drw $apple_x $apple_y 25

#begin
mul timed $score 5
sub interval 300 $timed
jlt 100 $interval sleep
let interval 100

#sleep
slp $interval

let key $lastkey
jne $key 37 check_up
jeq $direction 2 check_up
jmp press_left
#check_up
jne $key 38 check_right
jeq $direction 3 check_right
jmp press_up
#check_right
jne $key 39 check_down
jeq $direction 0 check_down
jmp press_right
#check_down
jne $key 40 move
jeq $direction 1 move
jmp press_down

jmp move

#press_left
let direction 0
jmp move
#press_up
let direction 1
jmp move
#press_right
let direction 2
jmp move
#press_down
let direction 3
jmp move

#move
jeq $direction 0 move_left
jeq $direction 1 move_up
jeq $direction 2 move_right
jeq $direction 3 move_down

#move_left
sub x $x 1
jne $x -1 move_snake
sub x $width 1
jmp move_snake
#move_right
add x $x 1
jne $x $width move_snake
let x 0
jmp move_snake
#move_up
sub y $y 1
jne $y -1 move_snake
sub y $height 1
jmp move_snake
#move_down
add y $y 1
jne $y $height move_snake
let y 0
jmp move_snake

#move_snake
let new_head []
psh new_head $x
psh new_head $y
psh snake $new_head
jne $x $apple_x miss_apple
jne $y $apple_y miss_apple
drw $x $y 1
add score $score 1
prt $score
jmp apple

#miss_apple
pxl color $x $y
jne $color 0 game_over

drw $x $y 1

pol snake tail
pop tail tail_y
pop tail tail_x
drw $tail_x $tail_y 0

jmp begin

#game_over
prt 'Game Over'
